name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  code_coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql/mysql-server:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 'root'
          MYSQL_ROOT_HOST: '%'
          MYSQL_DATABASE: 'testing'
          MYSQL_USER: 'testing'
          MYSQL_PASSWORD: 'testing'
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Run tests
        run: vendor/bin/phpunit --coverage-clover clover.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: clover.xml
          flags: release
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Generate API documentation
        run: php artisan l5-swagger:generate

      - name: Set API documentation version
        run: sed -i "s/0.0.0/$TAG/g" storage/api-docs/api-docs.json
        env:
          TAG: ${{ github.ref_name }}

      - name: Copy API documentation
        run: |
          mkdir -p docs
          cp storage/api-docs/api-docs.json docs/api-docs-${{ github.ref_name }}.json
          cp storage/api-docs/api-docs.json docs/api-docs-latest.json
          cp DEPENDENCIES.md docs/DEPENDENCIES-${{ github.ref_name }}.md
          cp DEPENDENCIES.md docs/DEPENDENCIES-latest.md
          cp CHANGELOG.md docs/CHANGELOG.md

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          cname: documents.kublade.org
          keep_files: true
          publish_branch: gh-pages

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build and push app image
        run: |
          docker build -t ghcr.io/kublade/core-app:${{ github.ref_name }} -f docker/production/Dockerfile.fpm .
          docker push ghcr.io/kublade/core-app:${{ github.ref_name }}
          docker tag ghcr.io/kublade/core-app:${{ github.ref_name }} ghcr.io/kublade/core-app:latest
          docker push ghcr.io/kublade/core-app:latest

      - name: Build and push worker image
        run: |
          docker build -t ghcr.io/kublade/core-worker:${{ github.ref_name }} -f docker/production/Dockerfile.worker .
          docker push ghcr.io/kublade/core-worker:${{ github.ref_name }}
          docker tag ghcr.io/kublade/core-worker:${{ github.ref_name }} ghcr.io/kublade/core-worker:latest
          docker push ghcr.io/kublade/core-worker:latest

  notify:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Trigger remote update
        uses: peter-evans/repository-dispatch@v1
        with:
          repository: kublade/documentation
          event-type: core-release
          token: ${{ secrets.DOCUMENTATION_REPOSITORY_TOKEN }}
